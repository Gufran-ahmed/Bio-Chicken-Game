#BlueJ class context
comment0.target=AbstractDoor
comment0.text=\r\n\ Base\ class\ for\ all\ types\ of\ door\ in\ the\ game.\ \r\n\ \r\n\ @author\r\n\ @version\ 1.0\r\n
comment1.params=clo\ closedImg\ openImg
comment1.target=AbstractDoor(boolean,\ greenfoot.GreenfootImage,\ greenfoot.GreenfootImage)
comment1.text=\r\n\ Creates\ a\ door\ object\r\n\ @param\ clo\ whether\ the\ door\ is\ in\ closed\ state\ to\ start\r\n\ @param\ closedImg\ the\ image\ shown\ when\ the\ door\ is\ closed\r\n\ @param\ openImg\ the\ image\ shown\ when\ the\ door\ is\ open\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ This\ implementation\ of\ Actor.act\ is\ intended\ for\ all\ subclasses\ of\ AbstractDoor.\ \r\n\ Subclasses\ override\ onOpen\ and/or\ onClose\ as\ needed\ to\ add\ specific\ functionality.\r\n\ This\ method\ is\ declared\ final\ to\ prevent\ overriding.\r\n
comment3.params=
comment3.target=void\ whileOpen()
comment3.text=\r\n\ Door\ behaviour\ when\ in\ "open"\ state\ is\ defined\ in\ this\ method.\ The\ default\ implmentation\r\n\ does\ nothing.\r\n
comment4.params=
comment4.target=void\ whileClosed()
comment4.text=\r\n\ Door\ behaviour\ when\ in\ "closed"\ state\ is\ defined\ in\ this\ method.\ The\ default\ implmentation\r\n\ does\ nothing.\r\n
comment5.params=
comment5.target=void\ open()
comment5.text=\r\n\ "Opens"\ this\ door.\r\n
comment6.params=
comment6.target=void\ close()
comment6.text=\r\n\ "Closes"\ this\ door.\r\n
comment7.params=world
comment7.target=void\ addedToWorld(greenfoot.World)
comment7.text=\r\n\ Called\ when\ the\ door\ is\ added\ to\ the\ \ active\ world.\r\n\ @param\ world\ the\ active\ world\r\n
comment8.params=
comment8.target=boolean\ isClosed()
comment8.text=\r\n\ Indicates\ whether\ or\ not\ the\ door\ is\ closed\r\n\ @return\ true\ if\ closed,\ false\ if\ open\r\n
numComments=9
